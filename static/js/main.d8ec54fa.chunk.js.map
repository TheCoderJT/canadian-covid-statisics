{"version":3,"sources":["styles/navbarStyles.js","components/Navbar.jsx","styles/searchProvs.js","styles/provinceCard.js","components/ProvinceCard.jsx","components/SearchProvs.jsx","App.js","index.js"],"names":["navbarStyles","makeStyles","appBar","backgroundColor","iconbutton","color","fontSize","toolBar","margin","Navbar","navBar","AppBar","className","position","Toolbar","disableGutters","IconButton","Typography","variant","searchProvs","autocomplete","marginTop","marginBottom","useStyles","theme","card","display","height","maxWidth","palette","background","paper","card_provName","fontWeight","fontFamily","padding","typography","fontWeightMedium","textAlign","ProvinceCard","provName","totalCases","activeCases","totalDeaths","totalRecovered","date","classes","useStyle","Card","raised","CardContent","elementTypd","cardContent","Grid","grid_items","direction","container","justify","alignItems","item","card_date","zeroMinWidth","card_data","card_dataValues","SearchProvs","useState","data","setData","prov","setProv","onChange","setOnChange","setActiveCases","setTotalCases","setTotalDeaths","setTotalRecovered","setDate","useEffect","axios","get","then","res","summary","catch","err","console","error","message","Autocomplete","autoSelect","fullWidth","e","i","length","province","target","textContent","parseInt","active_cases","toLocaleString","cumulative_cases","cumulative_deaths","cumulative_recovered","options","getOptionLabel","option","style","width","renderInput","params","TextField","label","content_container","App","xs","sm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAiBeA,EAfMC,aAAW,iBAAO,CACrCC,OAAQ,CACNC,gBAAiB,oBAGnBC,WAAY,CACVC,MAAO,QACPC,SAAS,UAGXC,QAAS,CACPC,OAAQ,c,OCSGC,EAjBA,WACb,IAAMC,EAASV,IACf,OACE,cAACW,EAAA,EAAD,CAAQC,UAAWF,EAAOR,OAAQW,SAAS,SAA3C,SACE,eAACC,EAAA,EAAD,CAASC,gBAAc,EAACH,UAAWF,EAAOH,QAA1C,UACE,cAACS,EAAA,EAAD,CAAYJ,UAAWF,EAAON,WAA9B,SACE,cAAC,IAAD,MAEF,cAACa,EAAA,EAAD,CAAYC,QAAQ,KAApB,gDACA,cAACF,EAAA,EAAD,CAAYJ,UAAWF,EAAON,WAA9B,SACE,cAAC,IAAD,Y,yBCJKe,EARKlB,aAAW,iBAAO,CACpCmB,aAAc,CACZC,UAAW,MACXC,aAAc,MACdd,OAAQ,c,oDC2CGe,EAhDGtB,aAAW,SAACuB,GAAD,gBAC3BC,KAAM,CACJC,QAAS,QACTlB,OAAQ,SACRmB,OAAQ,QACRC,SAAU,QACVzB,gBAAiBqB,EAAMK,QAAQC,WAAWC,OAG5CC,cAAe,CACb1B,SAAU,SACV2B,WAAY,SAXa,8BAcZ,CACbC,WAAY,2BACZD,WAAY,OACZ3B,SAAU,SACV6B,QAAS,cAlBgB,0BAqBhB,CACT7B,SAAU,SACV4B,WAAYV,EAAMY,WAAWF,WAC7BD,WAAYT,EAAMY,WAAWC,mBAxBJ,0BA2BhB,CACT/B,SAAU,QACVoB,QAAS,QACTY,UAAW,WA9Bc,gCAiCV,CACfjC,MAAO,qBAlCkB,4BAqCd,CACXsB,OAAQ,OACRQ,QAAS,IACT3B,OAAQ,MAxCiB,2BA0Cf,CACVmB,OAAQ,OACRxB,gBAAiB,qBA5CQ,KCiDdoC,EA/CM,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,SAAUC,EAAiE,EAAjEA,WAAYC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,eAAgBC,EAAW,EAAXA,KAChFC,EAAUC,IAEhB,OACE,cAACC,EAAA,EAAD,CAAMC,QAAM,EAACrC,UAAWkC,EAAQrB,KAAhC,SACE,cAACyB,EAAA,EAAD,CAAaC,YAAY,MAAMvC,UAAWkC,EAAQM,YAAlD,SACE,eAACC,EAAA,EAAD,CACEzC,UAAWkC,EAAQQ,WACnBC,UAAU,SACVC,WAAS,EACTC,QAAQ,eACRC,WAAW,SALb,UAOE,eAACL,EAAA,EAAD,CAAMM,MAAI,EAAV,UACE,cAAC1C,EAAA,EAAD,CAAYL,UAAWkC,EAAQd,cAAed,QAAQ,IAAtD,SACGsB,IAEH,eAACvB,EAAA,EAAD,CAAYL,UAAWkC,EAAQc,UAAW1C,QAAQ,IAAlD,mBACS2B,QAGX,cAACQ,EAAA,EAAD,CAAMM,MAAI,EAACE,cAAY,EAAvB,SACE,eAAC5C,EAAA,EAAD,CAAYL,UAAWkC,EAAQgB,UAAW5C,QAAQ,IAAlD,0BACe,sBAAMN,UAAWkC,EAAQiB,gBAAzB,SAA2CtB,SAG5D,cAACY,EAAA,EAAD,CAAMM,MAAI,EAACE,cAAY,EAAvB,SACE,eAAC5C,EAAA,EAAD,CAAYL,UAAWkC,EAAQgB,UAAW5C,QAAQ,IAAlD,2BACgB,sBAAMN,UAAWkC,EAAQiB,gBAAzB,SAA2CrB,SAG7D,cAACW,EAAA,EAAD,CAAMM,MAAI,EAACE,cAAY,EAAvB,SACE,eAAC5C,EAAA,EAAD,CAAYL,UAAWkC,EAAQgB,UAAW5C,QAAQ,IAAlD,2BACgB,sBAAMN,UAAWkC,EAAQiB,gBAAzB,SAA2CpB,SAG7D,cAACU,EAAA,EAAD,CAAMM,MAAI,EAACE,cAAY,EAAvB,SACE,eAAC5C,EAAA,EAAD,CAAYL,UAAWkC,EAAQgB,UAAW5C,QAAQ,IAAlD,8BACmB,sBAAMN,UAAWkC,EAAQiB,gBAAzB,SAA2CnB,iBC4B3DoB,EA9DK,WAAO,IAAD,EACAC,mBAAS,IADT,mBACjBC,EADiB,KACXC,EADW,OAEAF,mBAAS,IAFT,mBAEjBG,EAFiB,KAEXC,EAFW,OAGQJ,oBAAS,GAHjB,mBAGjBK,EAHiB,KAGPC,EAHO,OAIcN,mBAAS,IAJvB,mBAIjBvB,EAJiB,KAIJ8B,EAJI,OAKYP,mBAAS,IALrB,mBAKjBxB,EALiB,KAKLgC,EALK,OAMcR,mBAAS,IANvB,mBAMjBtB,EANiB,KAMJ+B,EANI,OAOoBT,mBAAS,IAP7B,mBAOjBrB,EAPiB,KAOD+B,EAPC,OAQAV,mBAAS,IART,mBAQjBpB,EARiB,KAQX+B,EARW,KASlB9B,EAAU3B,IAEhB0D,qBAAU,WACRC,IACGC,IAAI,oCACJC,MAAK,SAACC,GACLd,EAAQc,EAAIf,KAAKgB,YAElBC,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,EAAIG,cACnC,CAAC7C,EAAaD,EAAYE,EAAaC,EAAgBC,IAgB1D,OACE,qCACE,cAAC2C,EAAA,EAAD,CACE5E,UAAWkC,EAAQ1B,aACnBqE,YAAU,EACVC,WAAS,EACTpB,SApBe,SAACqB,GACpBpB,GAAY,GACZ,IAAK,IAAIqB,EAAI,EAAGA,EAAI1B,EAAK2B,OAAQD,IAC3B1B,EAAK0B,GAAGE,WAAaH,EAAEI,OAAOC,cAChC3B,EAAQH,EAAK0B,GAAGE,UAChBtB,EAAeyB,SAAS/B,EAAK0B,GAAGM,cAAcC,kBAC9C1B,EAAcwB,SAAS/B,EAAK0B,GAAGQ,kBAAkBD,kBACjDzB,EAAeuB,SAAS/B,EAAK0B,GAAGS,mBAAmBF,kBACnDxB,EAAkBsB,SAAS/B,EAAK0B,GAAGU,sBAAsBH,kBACzDvB,EAAQV,EAAK0B,GAAG/C,QAYhB0D,QAASrC,EACTsC,eAAgB,SAACC,GAAD,OAAYA,EAAOX,UACnCY,MAAO,CAAEC,MAAO,KAChBC,YAAa,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,MAAM,mBAAmB7F,QAAQ,iBAG3DoD,GACC,cAAC,EAAD,CACE9B,SAAU4B,EACV3B,WAAYA,EACZC,YAAaA,EACbC,YAAaA,EACbC,eAAgBA,EAChBC,KAAMA,QCzDVtB,EAAYtB,aAAW,iBAAO,CAClC+G,kBAAmB,CACjBrF,OAAQ,YAwBGsF,EApBH,WACM1F,IAChB,OACE,qCACE,cAAC8B,EAAA,EAAD,CAAMG,WAAS,EAACD,UAAU,SAA1B,SACE,cAACF,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC,EAAD,QAGJ,cAACN,EAAA,EAAD,CAAMM,MAAI,EAACH,WAAS,EAACC,QAAQ,SAASI,cAAY,EAAlD,SACE,cAACR,EAAA,EAAD,CAAMM,MAAI,EAACuD,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,EAAD,QAGJ,cAAC9D,EAAA,EAAD,CAAMM,MAAI,EAACH,WAAS,EAACC,QAAQ,SAASI,cAAY,EAAlD,SACE,cAACR,EAAA,EAAD,CAAMM,MAAI,EAACuD,GAAI,GAAIC,GAAI,U,MCrB/BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d8ec54fa.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst navbarStyles = makeStyles(() => ({\r\n  appBar: {\r\n    backgroundColor: \"rgb(196, 12, 12)\",\r\n  },\r\n\r\n  iconbutton: {\r\n    color: \"white\",\r\n    fontSize:'2.25em',\r\n  },\r\n\r\n  toolBar: {\r\n    margin: \"0 auto\",\r\n  },\r\n}));\r\n\r\nexport default navbarStyles;\r\n","import { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\r\nimport { FaCanadianMapleLeaf } from \"react-icons/fa\";\r\nimport React from \"react\";\r\nimport navbarStyles from \"../styles/navbarStyles.js\";\r\n\r\nconst Navbar = () => {\r\n  const navBar = navbarStyles();\r\n  return (\r\n    <AppBar className={navBar.appBar} position=\"static\">\r\n      <Toolbar disableGutters className={navBar.toolBar}>\r\n        <IconButton className={navBar.iconbutton}>\r\n          <FaCanadianMapleLeaf />\r\n        </IconButton>\r\n        <Typography variant=\"h4\">Covid Stats For Canadian Provinces</Typography>\r\n        <IconButton className={navBar.iconbutton}>\r\n          <FaCanadianMapleLeaf />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/* eslint-disable no-use-before-define */\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst searchProvs = makeStyles(() => ({\r\n  autocomplete: {\r\n    marginTop: \"2em\",\r\n    marginBottom: \"4em\",\r\n    margin: \"0 auto\",\r\n  },\r\n}));\r\n\r\nexport default searchProvs;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    display: \"block\",\r\n    margin: \"0 auto\",\r\n    height: \"600px\",\r\n    maxWidth: \"800px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n\r\n  card_provName: {\r\n    fontSize: \"2.25em\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  card_provName: {\r\n    fontFamily: \"Hind Madurai, sans-serif\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"2.25em\",\r\n    padding: \".25em 5em\",\r\n  },\r\n\r\n  card_data: {\r\n    fontSize: \"1.75em\",\r\n    fontFamily: theme.typography.fontFamily,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n  },\r\n\r\n  card_date: {\r\n    fontSize: \"1.5em\",\r\n    display: \"block\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  card_dataValues: {\r\n    color: \"rgb(255, 71, 71)\",\r\n  },\r\n\r\n  cardContent: {\r\n    height: \"100%\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n  },\r\n  grid_items: {\r\n    height: \"100%\",\r\n    backgroundColor: \"rgba(0,0,1,0.10)\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport useStyle from \"../styles/provinceCard.js\";\r\n\r\nconst ProvinceCard = ({ provName, totalCases, activeCases, totalDeaths, totalRecovered, date }) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <Card raised className={classes.card}>\r\n      <CardContent elementTypd=\"div\" className={classes.cardContent}>\r\n        <Grid\r\n          className={classes.grid_items}\r\n          direction=\"column\"\r\n          container\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <Typography className={classes.card_provName} variant=\"p\">\r\n              {provName} \r\n            </Typography>\r\n            <Typography className={classes.card_date} variant=\"p\">\r\n              Date: {date}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item zeroMinWidth>\r\n            <Typography className={classes.card_data} variant=\"p\">\r\n              Total Cases: <span className={classes.card_dataValues}>{totalCases}</span>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item zeroMinWidth>\r\n            <Typography className={classes.card_data} variant=\"p\">\r\n              Active Cases: <span className={classes.card_dataValues}>{activeCases}</span>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item zeroMinWidth>\r\n            <Typography className={classes.card_data} variant=\"p\">\r\n              Total Deaths: <span className={classes.card_dataValues}>{totalDeaths}</span>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item zeroMinWidth>\r\n            <Typography className={classes.card_data} variant=\"p\">\r\n              Total Recovered: <span className={classes.card_dataValues}>{totalRecovered}</span>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProvinceCard;\r\n","/* eslint-disable no-use-before-define */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport searchProvs from \"../styles/searchProvs.js\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport axios from \"axios\";\r\nimport ProvinceCard from \"./ProvinceCard.jsx\";\r\n\r\nconst SearchProvs = () => {\r\n  const [data, setData] = useState([]);\r\n  const [prov, setProv] = useState(\"\");\r\n  const [onChange, setOnChange] = useState(false);\r\n  const [activeCases, setActiveCases] = useState(\"\");\r\n  const [totalCases, setTotalCases] = useState(\"\");\r\n  const [totalDeaths, setTotalDeaths] = useState(\"\");\r\n  const [totalRecovered, setTotalRecovered] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const classes = searchProvs();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://api.opencovid.ca/summary\")\r\n      .then((res) => {\r\n        setData(res.data.summary);\r\n      })\r\n      .catch((err) => console.error(err.message));\r\n  }, [activeCases, totalCases, totalDeaths, totalRecovered, date]);\r\n\r\n  const handleChange = (e) => {\r\n    setOnChange(true);\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].province === e.target.textContent) {\r\n        setProv(data[i].province);\r\n        setActiveCases(parseInt(data[i].active_cases).toLocaleString());\r\n        setTotalCases(parseInt(data[i].cumulative_cases).toLocaleString());\r\n        setTotalDeaths(parseInt(data[i].cumulative_deaths).toLocaleString());\r\n        setTotalRecovered(parseInt(data[i].cumulative_recovered).toLocaleString());\r\n        setDate(data[i].date);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Autocomplete\r\n        className={classes.autocomplete}\r\n        autoSelect\r\n        fullWidth\r\n        onChange={handleChange}\r\n        options={data}\r\n        getOptionLabel={(option) => option.province}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField {...params} label=\"Search Provinces\" variant=\"outlined\" />\r\n        )}\r\n      />\r\n      {onChange && (\r\n        <ProvinceCard\r\n          provName={prov}\r\n          totalCases={totalCases}\r\n          activeCases={activeCases}\r\n          totalDeaths={totalDeaths}\r\n          totalRecovered={totalRecovered}\r\n          date={date}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchProvs;\r\n","/* eslint-disable no-use-before-define */\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport SearchProvs from \"./components/SearchProvs\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  content_container: {\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\">\r\n        <Grid item>\r\n          <Navbar />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container justify=\"center\" zeroMinWidth>\r\n        <Grid item xs={12} sm={8}>\r\n          <SearchProvs />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container justify=\"center\" zeroMinWidth>\r\n        <Grid item xs={12} sm={8}></Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","/* eslint-disable no-use-before-define */\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}